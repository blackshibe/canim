type easingFunction = (alpha: number) => number;

interface easing {
	linear: easingFunction,
	quad_in: easingFunction,
	quad_out: easingFunction,
	quad_in_out: easingFunction,
	quad_out_in: easingFunction,
	cubic_in: easingFunction,
	cubic_out: easingFunction,
	cubic_in_out: easingFunction,
	cubic_out_in: easingFunction,
	quart_in: easingFunction,
	quart_out: easingFunction,
	quart_in_out: easingFunction,
	quart_out_in: easingFunction,
	quint_in: easingFunction,
	quint_out: easingFunction,
	quint_in_out: easingFunction,
	quint_out_in: easingFunction,
	sine_in: easingFunction,
	sine_out: easingFunction,
	sine_in_out: easingFunction,
	sine_out_in: easingFunction,
	expo_in: easingFunction,
	expo_out: easingFunction,
	expo_in_out: easingFunction,
	expo_out_in: easingFunction,
	circ_in: easingFunction,
	circ_out: easingFunction,
	circ_in_out: easingFunction,
	circ_out_in: easingFunction,
	elastic_in: easingFunction,
	elastic_out: easingFunction,
	elastic_in_out: easingFunction,
	elastic_out_in: easingFunction,
	back_in: easingFunction,
	back_out: easingFunction,
	back_in_out: easingFunction,
	back_out_in: easingFunction,
	bounce_in: easingFunction,
	bounce_out: easingFunction,
	bounce_in_out: easingFunction,
	bounce_out_in: easingFunction,
}

declare const easing: easing;
export = easing;